import { useState, useEffect } from "react";

export default function useFetch({ api, method, url, params = null, data = null, config = null }) {
    let [response, setResponse] = useState(null);
    let [error, setError] = useState("");
    let [isLoading, setIsLoading] = useState(true);
    let [argument, setArgument] = useState(params);

    let doFetch = ({ api, method, url, params = null }) => {
        console.log('有调用2');
        setResponse(null)
        setError("");
        setIsLoading(true);
        setArgument(params);
    }

    useEffect(() => {
        let fetchData = async () => {
            try {
                console.log('有调用1');
                api[method](url, { argument }, data, config)
                    .then((res) => {
                        setResponse(res.data);
                    })
                    .finally(() => {
                        setIsLoading(false);
                    });
            } catch (err) {
                setError(err);
            }
        };

        fetchData();
    }, []);
    //if useEffect has the missing dependencies, the useEffect will keep sending requests

    return { response, error, isLoading, doFetch };
}